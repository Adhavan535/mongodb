
// recipe-app/server.js
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const bodyParser = require("body-parser");

const app = express();
app.use(cors());
app.use(bodyParser.json());

// ✅ Connect to MongoDB Atlas
mongoose
  .connect("YOUR_MONGODB_ATLAS_CONNECTION_STRING", {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => console.log("✅ MongoDB Connected"))
  .catch((err) => console.error("MongoDB Connection Error:", err));

// ✅ Recipe Schema & Model
const RecipeSchema = new mongoose.Schema({
  title: String,
  ingredients: String,
  instructions: String,
});
const Recipe = mongoose.model("Recipe", RecipeSchema);

// 🟢 CREATE
app.post("/api/recipes", async (req, res) => {
  const recipe = new Recipe(req.body);
  await recipe.save();
  res.json(recipe);
});

// 🔵 READ
app.get("/api/recipes", async (req, res) => {
  const recipes = await Recipe.find();
  res.json(recipes);
});

// 🟠 UPDATE
app.put("/api/recipes/:id", async (req, res) => {
  const updated = await Recipe.findByIdAndUpdate(req.params.id, req.body, {
    new: true,
  });
  res.json(updated);
});

// 🔴 DELETE
app.delete("/api/recipes/:id", async (req, res) => {
  await Recipe.findByIdAndDelete(req.params.id);
  res.json({ message: "Recipe deleted successfully" });
});

// ✅ Start Server
app.listen(5000, () => console.log("🚀 Server running on port 5000"));

cd recipe-app
npx create-react-app recipe
cd recipe
npm install axios

// recipe/src/App.js
import React, { useState, useEffect } from "react";
import axios from "axios";

function App() {
  const [recipes, setRecipes] = useState([]);
  const [title, setTitle] = useState("");
  const [ingredients, setIngredients] = useState("");
  const [instructions, setInstructions] = useState("");

  // 🟦 Fetch all recipes
  useEffect(() => {
    axios.get("http://localhost:5000/api/recipes").then((res) => {
      setRecipes(res.data);
    });
  }, []);

  // 🟩 Add new recipe
  const addRecipe = () => {
    if (!title || !ingredients || !instructions) return;
    axios
      .post("http://localhost:5000/api/recipes", {
        title,
        ingredients,
        instructions,
      })
      .then((res) => {
        setRecipes([...recipes, res.data]);
        setTitle("");
        setIngredients("");
        setInstructions("");
      });
  };

  // 🟨 Update recipe
  const updateRecipe = (id) => {
    const newTitle = prompt("New Title:");
    const newIngredients = prompt("New Ingredients:");
    const newInstructions = prompt("New Instructions:");
    if (newTitle && newIngredients && newInstructions) {
      axios
        .put(`http://localhost:5000/api/recipes/${id}`, {
          title: newTitle,
          ingredients: newIngredients,
          instructions: newInstructions,
        })
        .then((res) => {
          setRecipes(recipes.map((r) => (r._id === id ? res.data : r)));
        });
    }
  };

  // 🟥 Delete recipe
  const deleteRecipe = (id) => {
    axios.delete(`http://localhost:5000/api/recipes/${id}`).then(() => {
      setRecipes(recipes.filter((r) => r._id !== id));
    });
  };

  return (
    <div style={{ textAlign: "center", margin: "50px" }}>
      <h2>🍲 Cooking Recipe Notes</h2>

      <input
        type="text"
        placeholder="Recipe title"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
      />
      <br />
      <textarea
        rows="2"
        placeholder="Ingredients"
        value={ingredients}
        onChange={(e) => setIngredients(e.target.value)}
      />
      <br />
      <textarea
        rows="2"
        placeholder="Instructions"
        value={instructions}
        onChange={(e) => setInstructions(e.target.value)}
      />
      <br />
      <button onClick={addRecipe}>Add Recipe</button>

      <ul style={{ listStyle: "none", padding: 0 }}>
        {recipes.map((r) => (
          <li
            key={r._id}
            style={{
              border: "1px solid #ccc",
              margin: "10px",
              padding: "10px",
              borderRadius: "10px",
            }}
          >
            <h3>{r.title}</h3>
            <p><strong>Ingredients:</strong> {r.ingredients}</p>
            <p><strong>Instructions:</strong> {r.instructions}</p>
            <button onClick={() => updateRecipe(r._id)}>✏️ Edit</button>{" "}
            <button onClick={() => deleteRecipe(r._id)}>❌ Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;

cd recipe-app
npm init -y
npm install express mongoose cors body-parser
node server.js

cd recipe-app/recipe
npm start


